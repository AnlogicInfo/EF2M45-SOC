<chipwatcher project_name="Quick_Start" bit_file="Quick_Start.bit">
	<instance name="auto_chipwatcher_0" id="0" enabled="yes">
		<clock clk_name="clk25" polarity="posedge"/>
		<config bram_type="" sample_depth="128"/>
		<signal_vec>
			<trigger_nets>
				<net name="usr_reg[0]"/>
				<net name="usr_reg[10]"/>
				<net name="usr_reg[11]"/>
				<net name="usr_reg[12]"/>
				<net name="usr_reg[13]"/>
				<net name="usr_reg[14]"/>
				<net name="usr_reg[15]"/>
				<net name="usr_reg[1]"/>
				<net name="usr_reg[2]"/>
				<net name="usr_reg[3]"/>
				<net name="usr_reg[4]"/>
				<net name="usr_reg[5]"/>
				<net name="usr_reg[6]"/>
				<net name="usr_reg[7]"/>
				<net name="usr_reg[8]"/>
				<net name="usr_reg[9]"/>
			</trigger_nets>
			<data_nets>
				<net name="usr_reg[0]"/>
				<net name="usr_reg[10]"/>
				<net name="usr_reg[11]"/>
				<net name="usr_reg[12]"/>
				<net name="usr_reg[13]"/>
				<net name="usr_reg[14]"/>
				<net name="usr_reg[15]"/>
				<net name="usr_reg[1]"/>
				<net name="usr_reg[2]"/>
				<net name="usr_reg[3]"/>
				<net name="usr_reg[4]"/>
				<net name="usr_reg[5]"/>
				<net name="usr_reg[6]"/>
				<net name="usr_reg[7]"/>
				<net name="usr_reg[8]"/>
				<net name="usr_reg[9]"/>
			</data_nets>
			<watcher_nodes>
				<bus name="usr_reg" radix="hex" state="collapse">
					<net name="usr_reg[0]"/>
					<net name="usr_reg[1]"/>
					<net name="usr_reg[2]"/>
					<net name="usr_reg[3]"/>
					<net name="usr_reg[4]"/>
					<net name="usr_reg[5]"/>
					<net name="usr_reg[6]"/>
					<net name="usr_reg[7]"/>
					<net name="usr_reg[8]"/>
					<net name="usr_reg[9]"/>
					<net name="usr_reg[10]"/>
					<net name="usr_reg[11]"/>
					<net name="usr_reg[12]"/>
					<net name="usr_reg[13]"/>
					<net name="usr_reg[14]"/>
					<net name="usr_reg[15]"/>
				</bus>
			</watcher_nodes>
		</signal_vec>
		<trigger name="auto_chipwatcher_0_trigger" position="pre">
			<condition level="1" enabled="yes" type="basic_and">
				usr_reg[0] == any && usr_reg[10] == any && usr_reg[11] == any && usr_reg[12] == any && usr_reg[13] == any && usr_reg[14] == any && usr_reg[15] == any && usr_reg[1] == any && usr_reg[2] == any && usr_reg[3] == any && usr_reg[4] == any && usr_reg[5] == any && usr_reg[6] == any && usr_reg[7] == any && usr_reg[8] == any && usr_reg[9] == any
			</condition>
			<log>
				<data name="log: 2018/ 8/20 15:20:13" trigger_en="yes" trigger_pos="41" sample_num="128">
					
				</data>
			</log>
		</trigger>
	</instance>
</chipwatcher>
